# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Query {

    """ *** Retrieve data for all clients """
    clients(filter: ClientFilter, limit: Int = 0, offset: Int = 0): [Client!]!

    """ *** Retrieve data for all categories """
    categories(limit: Int = 0, offset: Int = 0): [Category!]!

    """ *** Retrieve data for all purchases """
    purchases(filter: PurchaseFilter, limit: Int = 0, offset: Int = 0): [Purchase!]!

    """ Retrieve the information for a set of products, optionally filtering by ID, country or provider's ID """
    products(filter: ProductFilter, limit: Int = 0, offset: Int = 0): [Product!]!

    """ Retrieve the information for a set of products with admin info, optionally filtering by ID, country or provider's ID """
    products_admin(filter: ProductFilter, limit: Int = 0, offset: Int = 0): [ProductAdmin!]!

    """ Retrieve data for all providers """
    providers(filter: ProviderFilter, limit: Int = 0, offset: Int = 0): [Provider!]

    """ Retrieve data for all countries """
    countries(limit: Int = 0, offset: Int = 0): [Country!]!

    """ Retrieve the information the products that are available for that phone number """
    productsByPhoneNumber(phoneNumber: PhoneNumber!, limit: Int = 0, offset: Int = 0): [Product!]!

    """ Retrieve the log in information for a user """
    accountInfo(username: String!, password: String!): Client!
}

type Mutation {
    """ Updates custom product information"""
    updateProduct(id: ID!, product: ProductInput!): ProductAdmin!
}

type Category {

    """ Category ID """
    id: ID!

    """ Category name """
    name: String!

    """ Products available in the category """
    products: [Product!]
}

type ApiKey {

    """ ApiKey Index """
    id: ID!

    """ ApiKey Value """
    key: String!

    """ ApiKey Client Relation """
    clientID: Int!

    """ ApiKey Client Info """
    client: Client!

    """ ApiKey staging environment indication. """
    isDev: Boolean!

    """ ApiKey admin privileges indication. """
    isAdmin: Boolean!

}

type Client {

    """ Client ID """
    id: ID!

    """ Client name """
    name: String!

    """ Client address street """
    addressStreet: String!

    """ Client address postal code """
    addressPC: Int!

    """ Client address city """
    addressCity: String!

    """ Client address state """
    addressState: String!

    """ Client address country """
    addressCountry: String!

    """ Monthly fee """
    monthlyFee: Float!

    """ Terms and conditions of the client """
    tc: String!

    """ Client contact name """
    contactName: String!

    """ Client contact last name """
    contactLastName: String!

    """ Client contact title """
    contactTitle: String!

    """ Client contact email """
    contactEmail: String!

    """ Client purchases """
    purchases: [Purchase!]

    """ Client premium status """
    isPremium: Boolean!

    """ Client login username """
    userName: String!

    """ Client login hashed password """
    password: String!

    """ Float Account Balance """
    balance: Float!

    """ ApiKeys """
    apiKeys: [ApiKey!]!
}

input ClientFilter {

    """ Client ID """
    id: ID

    """ Client name """
    name: String

    """ Client address postal code """
    addressPC: Int

    """ Client address state """
    addressState: String

    """ Client address country """
    addressCountry: String
}

type Country {

    """ Country ID """
    id: String!

    """ Country name """
    name: String!

    """ Products available in the country """
    products: [Product!]
}

type CurrencyRate {
    currency: String!

    value: Float!
}


input DateRange {

    """ *** Start """
    start: Int!

    """ *** End """
    end: Int!
}

type MetaProvider {

    """ MetaProvider ID """
    id: ID!

    """ MetaProvider name """
    name: String!
}

input PhoneNumber {

    """ *** """
    countryCode: String!

    """ *** """
    phoneNumber: String!
}

input PriceRange {

    """ *** """
    minPrice: Float

    """ *** """
    maxPrice: Float
}

type Product {

    """ Product ID """
    id: ID!

    """ Indicates if the product is available """
    available: Boolean!

    """ Product currency """
    currency: String!

    """ Product description """
    description: String!

    """ Absolute product discount, expressed in net amount """
    discountAbsolute: Float!

    """ Product discount percentage, expressed as a decimal from 0 to 1 *** """
    discountPercentage: Float!

    """ Fixed maximum price of the product in eur """
    eurMaxPrice: Float!

    """ Fixed minium price of the product in eur """
    eurMinPrice: Float!

    """ Fixed maximum price of the product """
    fixedMaxPrice: Float!

    """ Fixed minimum price of the product """
    fixedMinPrice: Float!

    """ Product name """
    fullName: String!

    """ Indicates if the product has a discount """
    hasDiscount: Boolean!

    """ Indicates if the product has a fixed price """
    isFixedPrice: Boolean!

    """ Indicates if the product is premium """
    isPremium: Boolean!

    """ Product country, expressed with ISO 3166 Alpha-2 code """
    locale: String!

    """ Online terms and conditions of the product represented in a string, in some cases with urls in between """
    onlineTc: String!

    """ Original product ID """
    originalID: String!

    """ MetaProvider ID """
    metaProviderID: Int!

    """ MetaProvider data """
    metaProvider: MetaProvider!

    """ Provider ID """
    providerID: Int!

    """ Provider data """
    provider: Provider!

    """ Instructions to redeem the product """
    redeemInstructions: String!

    """ Site to redeem the product """
    redeemSite: String!

    """ If the product requires seller to send end user mail info """
    requireMail: Boolean!

    """ If the product requires seller to send end user mobile number info """
    requirePhone: Boolean!

    """ If the product requires seller to send end user extra info """
    requireOther: Boolean!

    """ Whether the product requires user identity """
    requiresUserIdentity: Boolean!

    """ Terms and conditions of the product represented in a string """
    tc: String!

    """ URL Image of the product """
    urlImage: String!

    """ Array containing the countries where the product can be found """
    countries: [Country!]!

    """ *** """
    variants: [Variant!]

    """ Array with categories where the product can be found """
    categories: [Category!]
}

input ProductInput {
    """ Product custom name """
    customFullName: String!

    """ Indicates if the product has a discount """
    customDiscount: Float!

    """ Custom URL Image of the product """
    customUrlImage: String!

    """ Product custom description """
    customDescription: String!
}

type ProductAdmin {

    """ Product ID """
    id: ID!

    """ Indicates if the product is available """
    available: Boolean!

    """ Product currency """
    currency: String!

    """ Product description """
    description: String!

    """ Product custom description """
    customDescription: String!

    """ Absolute product discount, expressed in net amount """
    discountAbsolute: Float!

    """ Product discount percentage, expressed as a decimal from 0 to 1 *** """
    discountPercentage: Float!

    """ Custom Product Discount """
    customDiscount: Float!

    """ Fixed maximum price of the product in eur """
    eurMaxPrice: Float!

    """ Fixed minium price of the product in eur """
    eurMinPrice: Float!

    """ Fixed maximum price of the product """
    fixedMaxPrice: Float!

    """ Fixed minimum price of the product """
    fixedMinPrice: Float!

    """ Product name """
    fullName: String!

    """ Product custom name """
    customFullName: String!

    """ Indicates if the product has a discount """
    hasDiscount: Boolean!

    """ Indicates if the product has a fixed price """
    isFixedPrice: Boolean!

    """ Indicates if the product is premium """
    isPremium: Boolean!

    """ Product country, expressed with ISO 3166 Alpha-2 code """
    locale: String!

    """ Online terms and conditions of the product represented in a string, in some cases with urls in between """
    onlineTc: String!

    """ Original product ID """
    originalID: String!

    """ MetaProvider ID """
    metaProviderID: Int!

    """ MetaProvider data """
    metaProvider: MetaProvider!

    """ Provider ID """
    providerID: Int!

    """ Provider data """
    provider: Provider!

    """ Instructions to redeem the product """
    redeemInstructions: String!

    """ Site to redeem the product """
    redeemSite: String!

    """ If the product requires seller to send end user mail info """
    requireMail: Boolean!

    """ If the product requires seller to send end user mobile number info """
    requirePhone: Boolean!

    """ If the product requires seller to send end user extra info """
    requireOther: Boolean!

    """ Whether the product requires user identity """
    requiresUserIdentity: Boolean!

    """ Terms and conditions of the product represented in a string """
    tc: String!

    """ URL Image of the product """
    urlImage: String!

    """ Custom URL Image of the product """
    customUrlImage: String!

    """ Array containing the countries where the product can be found """
    countries: [Country!]!

    """ *** """
    variants: [Variant!]

    """ Array with categories where the product can be found """
    categories: [Category!]

    """ Special field for provider specific product info. Ex store for Baluwo or ean for Ding. """
    ProductType: String!
}

input ProductFilter {

    """ Product ID """
    id: ID

    """ Product country, expressed with ISO 3166 Alpha-2 code """
    locale: String

    """ Product provider ID """
    providerID: Int

    """ Product name """
    fullName: String

    """ Product premium flag"""
    isPremium: Boolean
}

type Provider {

    """ Provider ID """
    id: ID!

    """ URL Image of the provider """
    image: String!

    """ MetaProvider ID """
    metaProviderID: Int!

    """ MetaProvider data """
    metaProvider: MetaProvider!

    """ Provider name """
    name: String!

    """ Original provider ID """
    originalId: String!
}

input ProviderFilter {

    """ Provider name """
    name: String!
}

type Purchase {

    """ Purchase ID """
    id: ID!

    """ Client ID of the purchase """
    clientID: Int!

     """ Unique transaction ID from the client. """
    TransactionID: String!

    """ Client of the purchase """
    client: Client!

    """ Product ID of the purchase """
    productID: Int!

    """ Product of the purchase """
    product: Product!

    """ Total purchase price in euros """
    totalValue: Float!

    """ Total purchase price in the original currency """
    originalValue: Float!

    """ End user name """
    EndUserName: String!

    """ End user email """
    EndUserEmail: String!

    """ End user country """
    EndUserCountry: String!

    """ End user country phone code """
    EndUserPhoneCountryCode: String!

    """ End user phone number """
    EndUserPhoneNumber: String!

    """ Extra field for service payment data. """
    EndUserSecondNumber: String!

    """ Timestamp for the purchase request from out client in UTC """
    timestampRequest: Int!

    """ Timestamp for the purchase delivery in UTC """
    timestampFulfilled: Int!

    """ Reedem Code for the purchase. """
    redeemCode: String!

    """ Provider information on product redeem. """
    receipt: String!

    """ Stores any error from Provider API """
    errorMessage: String!
}

input PurchaseFilter {

    """ *** Purchase ID """
    id: ID

    """ *** Timestamp for the purchase, in Unix Timestamp format """
    dateRange: DateRange

    """ *** Client ID of the purchase """
    clientID: Int

    """ *** Product ID of the purchase """
    productID: Int

    """ *** Price range in euros """
    priceRange: PriceRange
}

type Variant {

    """ Variant ID """
    id: Int!

    """ Variant product ID """
    productID: Int!

    """ Variant productAdmin ID """
    productAdminID: Int!

    """ Variant price """
    price: Float!

    """ Variant value """
    value: Float!
}